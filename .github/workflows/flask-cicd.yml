name: Flask CI/CD Pipeline

on:
  push:
    branches:
      - main

env:
  APP_NAME: flask-cicd-demo
  APP_DIR: /home/ubuntu/vlearn-cicd-pipeline-using-github-actions
  GIT_REPO: https://github.com/yogi9016/vlearn-cicd-pipeline-using-github-actions.git
  GIT_BRANCH: main
  DOCKER_IMAGE: flask-cicd-actions:latest
  CONTAINER_NAME: cicd-actions-container
  APP_PORT: 5001

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: copy files to EC2
        uses: appleboy/scp-action@v1
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: 22
          source: ./
          target: /home/ubuntu

      - name: Check and install dependencies on EC2
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: 22
          script: |
            echo "üîç Checking dependencies on remote EC2..."

            for pkg in docker.io nginx git; do
              if ! command -v $pkg &>/dev/null; then
                echo "$pkg not found. Installing..."
                sudo apt-get update && sudo apt-get install -y $pkg
              else
                echo "$pkg already installed."
              fi
            done

            echo "‚úÖ Dependency check completed!"

      - name: Build and run Docker container
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: 22
          script: |
            APP_DIR=/home/ubuntu/vlearn-cicd-pipeline-using-github-actions
            DOCKER_IMAGE=flask-cicd-actions:latest
            CONTAINER_NAME=cicd-actions-container
            APP_PORT=5001

            cd $APP_DIR
            echo "Building Docker image..."
            sudo docker build -t $DOCKER_IMAGE .

            echo "Stopping old container if exists..."
            sudo docker rm -f $CONTAINER_NAME || true

            echo "Running new container..."
            sudo docker run -d --name $CONTAINER_NAME -p $APP_PORT:5000 $DOCKER_IMAGE

      - name: Configure and restart NGINX
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: 22
          script: |
            APP_DIR=/home/ubuntu/vlearn-cicd-pipeline-using-github-actions
            echo "Copying NGINX config..."
            sudo cp -f $APP_DIR/nginx.conf /etc/nginx/conf.d/app.conf
            sudo rm -f /etc/nginx/sites-enabled/default /etc/nginx/sites-available/default

            echo "Testing NGINX configuration..."
            sudo nginx -t

            echo "Restarting NGINX..."
            sudo systemctl restart nginx

      - name: Health Check
        run: |
          echo "Performing health check..."
          STATUS_CODE=$(curl -s -o /dev/null -w "%{http_code}" http://${{ secrets.SERVER_HOST }}:${{ env.APP_PORT }})
          if [ "$STATUS_CODE" -eq 200 ]; then
            echo "‚úÖ Health Check Passed!"
          else
            echo "‚ùå Health Check Failed! HTTP $STATUS_CODE"
            exit 1
          fi